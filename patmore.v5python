{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\nforward_motor_group_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_18_1, True)\nforward_motor_group_motor_b = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nforward_motor_group = MotorGroup(forward_motor_group_motor_a, forward_motor_group_motor_b)\nflywheel_group_motor_a = Motor(Ports.PORT5, GearSetting.RATIO_18_1, True)\nflywheel_group_motor_b = Motor(Ports.PORT6, GearSetting.RATIO_18_1, False)\nflywheel_group = MotorGroup(flywheel_group_motor_a, flywheel_group_motor_b)\nfeed_wheel = Motor(Ports.PORT7, GearSetting.RATIO_18_1, False)\nload_wheel = Motor(Ports.PORT3, GearSetting.RATIO_18_1, True)\nslammer = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\n# vex-vision-config:begin\neyes__DISC = Signature(1, 1001, 1255, 1128,-3607, -3285, -3446,4, 0)\neyes = Vision(Ports.PORT10, 50, eyes__DISC)\n# vex-vision-config:end\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\n\n# ------------------------------------------\n#\n#   Project:      Basic TeleOP\n#   Author:       ISP: MECHA FALCONS\n#   Created:      December 13 2022\n#   Description:  THE BEST CODE\n#\n# ------------------------------------------\n\n\n# Library imports\nfrom vex import *\n\n\n#region Constants\nDEAD_ZONE_PERCENT = 0\nSLOW_MOD = 0.25\nMAX_SPEED = 90\nFEED_SPEED = 15\nLOAD_SPEED = 30\nFLYWHEEL_SPEED = 100\nSLAM_SPEED = 20\nVERSION = \"v2.1.0\"\n#endregion Constants\n\n\n#region Controls\nforward_axis = controller_1.axis3\npivot_axis = controller_1.axis1\nslow_button = controller_1.buttonA\nflywheel_button = controller_1.buttonB\nfeed_button = controller_1.buttonR2\nload_button = controller_1.buttonUp\nslammer_button = controller_1.buttonL1\nunslammer_button = controller_1.buttonL2\n#endregion Controls\n\n\nloading = False\nslowmode = False\n\n\n\n\ndef manage_speed_percent(axis):\n   percent = axis.position()\n   if abs(percent) < DEAD_ZONE_PERCENT:\n       return 0\n\n\n   if percent > MAX_SPEED:\n       percent = MAX_SPEED\n   elif percent < -MAX_SPEED:\n       percent = -MAX_SPEED\n  \n   return int(percent * (SLOW_MOD if slowmode else 1))\n\n\n#region Motor Functions\ndef toggle_load():\n   global loading\n   if loading:\n       load_wheel.stop()\n   else:\n       load_wheel.spin(FORWARD)\n  \n   loading = not loading\n\n\ndef toggle_slowmode():\n   global slowmode\n   controller_1.screen.set_cursor(3,1)\n  \n   slowmode = not slowmode\n\n\n   if slowmode:\n       controller_1.screen.print(\"SLOWMODE ON \")\n   else:\n       controller_1.screen.print(\"SLOWMODE OFF\")\n\n\n\n\ndef start_feed():\n   feed_wheel.spin(FORWARD)\n\n\ndef stop_feed():\n   feed_wheel.stop()\n\n\n\n\ndef charge_on():\n   flywheel_group.spin(FORWARD)\n\n\ndef charge_off():\n   flywheel_group.stop()\n\n\n\n\ndef pivot():\n   speed = manage_speed_percent(pivot_axis)\n   forward_motor_group.set_velocity(abs(speed), PERCENT)\n   if speed < 0:\n       forward_motor_group_motor_a.spin(FORWARD)\n       forward_motor_group_motor_b.spin(REVERSE)\n   elif speed > 0:\n       forward_motor_group_motor_a.spin(REVERSE)\n       forward_motor_group_motor_b.spin(FORWARD)\n   else:\n       go_forward()\n  \n\n\ndef go_forward():\n   speed = manage_speed_percent(forward_axis)\n   forward_motor_group.set_velocity(abs(speed), PERCENT)\n   if speed > 0:\n       forward_motor_group.spin(FORWARD)\n   elif speed < 0:\n       forward_motor_group.spin(REVERSE)\n   else:\n       forward_motor_group.stop()\n\n\ndef slam():\n   slammer.spin_to_position(0, DEGREES)\n\n\ndef unslam():\n   slammer.spin_to_position(-90, DEGREES)\n\n\n\n\n#endregion Motor Functions\n\n\n#region Pre-start Config\n\ndef driver_control():\n    controller_1.screen.print(\"SLOWMODE OFF\")\n    slow_button.pressed(toggle_slowmode)\n\n\n    pivot_axis.changed(pivot)\n    forward_axis.changed(go_forward)\n\n\n    flywheel_group.set_velocity(FLYWHEEL_SPEED, PERCENT)\n    flywheel_button.pressed(charge_on)\n    flywheel_button.released(charge_off)\n\n\n    feed_wheel.set_velocity(FEED_SPEED, PERCENT)\n    feed_button.pressed(start_feed)\n    feed_button.released(stop_feed)\n\n\n    load_wheel.set_velocity(LOAD_SPEED, PERCENT)\n    load_button.pressed(toggle_load)\n\n\n    slammer.set_velocity(SLAM_SPEED, PERCENT)\n    slammer.set_position(0, DEGREES)\n    slammer_button.pressed(slam)\n    unslammer_button.pressed(unslam)\n\n    brain.screen.next_row()\n    brain.screen.print(\"Driver activated\")\n\ndef autonomous():\n    forward_motor_group.spin_for(FORWARD, 10, TURNS)\n\ncompetition = Competition(driver_control, autonomous)\n\n#endregion Pre-start Config\n","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1,2],"name":"forward_motor_group","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[5,6],"name":"flywheel_group","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[7],"name":"feed_wheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[3],"name":"load_wheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[4],"name":"slammer","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[10],"name":"eyes","customName":true,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":50,\"signatures\":[{\"name\":\"DISC\",\"parameters\":{\"uMin\":1001,\"uMax\":1255,\"uMean\":1128,\"vMin\":-3607,\"vMax\":-3285,\"vMean\":-3446,\"rgb\":1,\"type\":0,\"name\":\"DISC\"},\"range\":4},{\"name\":\"SIG_2\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_2\"},\"range\":2.5},{\"name\":\"SIG_3\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_3\"},\"range\":2.5},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[]}}","isConfigured":"false"}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}